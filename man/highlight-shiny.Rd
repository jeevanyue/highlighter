% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/highlight.R
\name{highlight-shiny}
\alias{highlight-shiny}
\alias{highlightOutput}
\alias{renderHighlight}
\title{Shiny bindings for HTML widgets}
\usage{
highlightOutput(outputId, width = "100\%", height = "100\%")

renderHighlight(expr, env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{outputId}{The name of the input.}

\item{width, height}{Must be a valid CSS unit (like \code{'100\%'},
\code{'400px'}, \code{'auto'}) or a number, which will be coerced to a
string and have \code{'px'} appended.}

\item{expr}{An expression that generates an HTML widget (or a
\href{https://rstudio.github.io/promises/}{promise} of an HTML widget).}

\item{env}{The environment in which to evaluate \code{expr}.}

\item{quoted}{Is \code{expr} a quoted expression (with \code{quote()})? This
is useful if you want to save an expression in a variable.}
}
\description{
Shiny bindings for HTML widgets
}
\examples{
if (interactive()) {
library(shiny)
library(highlighter)

ui <- fluidPage(
	highlightOutput("hl1"),
	highlightOutput("hl2"),
	highlightOutput("hl3")
)

server <- function(input, output, session) {
	output$hl1 <- renderHighlight({
		highlight("library('tidyverse')", style = "default2")
	})
	output$hl2 <- renderHighlight({
		highlight("library('tidyverse')", style = "dark2")
	})
	output$hl3 <- renderHighlight({
		highlight("library('tidyverse')", style = "solarized-dark2")
	})
}

shinyApp(ui, server)
}

}
